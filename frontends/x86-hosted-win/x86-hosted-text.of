`text forth/forthup.of
`text forth/forth.of

( ======== Hosted terminal ======== )

' (host-emit) to (emit)
:noname true ; to emit?
' (host-key) to key
' (host-key?) to key?
' (host-rest) to rest

:noname
	cr
	(host-bye)
; to bye

D (host-emit)

' #lines >body ' #columns >body (host-is-win)

( ============ Memory ============= )

1 constant mem-#existing
create mem-existing 0 , 80000000 ,

alias xb@ c@
alias xw@ w@
alias xl@ @
alias xb! c!
alias xw! w!
alias xl! !

( ============ Context Display ============= )

: .ctx				( sys? -- )
	<ctx>
	4 spaces ." eax: " dup @ .cell cell+
	3 spaces ." ebx: " dup @ .cell cell+
	3 spaces ." ecx: " dup @ .cell cell+
	3 spaces ." edx: " dup @ .cell cell+
	cr
	4 spaces ." esi: " dup @ .cell cell+
	3 spaces ." esi: " dup @ .cell cell+
	3 spaces ." ebp: " dup @ .cell cell+
	3 spaces ." esp: " dup @ .cell cell+
	cr	
	drop
;

: .fctx				( -- )
	cr ." Forth Context" cr
	false .ctx
;

: .sysctx			( -- )
	cr ." System Context" cr
	true .ctx
;

( ============ Host Signals ============= )

: global_data	A initvec@ ;
20 (field) >signal-handler

0 value exc-data0
0 value exc-data1
0 value exc-cause

: (signal)				( data0 data1 cause -- ... )
	dup to exc-cause
	case
		2 of			\ SIGINT
			2drop -1C throw
		endof
		8 of			\ SIGFPE: assume divide-by-zero
			2drop
			0			\ The / primitive popped TOS (which was 0), so reinsert it
			-A throw
		endof
	endcase

	to exc-data1
	to exc-data0
	
	-80000000 throw
;

: (posix-exception-catch)		( -- )
	exc-cause case
		A of
			." bus error while accessing " exc-data1 .cell
		endof
		B of
			." segmentation violation while accessing " exc-data1 .cell
		endof
		." POSIX signal " dup .
	endcase
;

' (posix-exception-catch) to exception-catch


' (signal) global_data >signal-handler !

( ==================================== )

`text forth/inline-binary.of
`text forth/alloc-mem.of
`text forth/memory.of

( ======== )

: in-of-mem?		( addr -- in-of-mem? )
	dup in-of-mem?
	swap dup ['] + u>= swap ['] <debug> u<= and or
;

( ======== )

`text of/strings.of
`text of/device.of
`text forth/see.of
`text forth/backtrace.of
`text forth/utilities.of
`text forth/completion.of
`text of/options.of
`text of/script.of

`text of/terminal-emulator.of
`bin  (default-font)	packages/gallumph-6x11.bin
`text packages/fb8.of

`text of/timing.of
`text of/stubs.of

( ======== )

10 constant dma-alignment

( ======== )

`text of/device-tree-common.of
`text of/native-console.of
`text of/shortcuts.of

dev /packages
new-device
	`text packages/deblocker.of
finish-device
new-device
	`text packages/mac-disk-label.of
finish-device
dev ..

new-device
	`text drivers/hosted-terminal.of
finish-device

unselect-dev

" /terminal" io
setenv input-device /terminal
setenv output-device /terminal


." Welcome to Open Firmware." cr
." Type bye<return> to exit." cr cr


quit